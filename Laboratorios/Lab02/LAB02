PARTE UNO
	A)
		1. Modificamos cardinalidades
		2. Astah
	
	B)
		1. Modificamos la nulidad de las tablas, completamos los nombres de las columnas de las tablas y verificamos si eran PK y FK
		2.Astah

PARTE DOS
	-Definicion de los superconceptos

PARTE TRES
	
	CICLO UNO:
		A)Astah
			Atributos innecesarios:
				Customer:
					-Customer.MiddleName
					-Customer.Title
					-Customer.Suffix
					Es informacion de una persona que es necesaria conocer para poder llegar a un reporte mas limpio
				
				Address:
					- AddressLine1
						Ya que es necesario conocer cual es la direccion de envio
					- City
						Es necesario conocer la cidudad a donde se va a realizar el envio debido a las diferentes restricciones que se puedan tener en cada ciudad
		B)Astah
		C)
			2)
			Show OrdeQty, the Name and the ListPrice of the order made by CustomerID 635
				SELECT OrderQty,Name,ListPrice
				FROM SalesOrderHeader JOIN SalesOrderDetail
					ON SalesOrderDetail.SalesOrderID = SalesOrderHeader.SalesOrderID
						JOIN Product
					ON SalesOrderDetail.ProductID=Product.ProductID
				WHERE CustomerID=635
			
			Show all the addresses listed for 'Modular Cycle Systems'
				SELECT CompanyName,AddressType,AddressLine1
				FROM Customer JOIN CustomerAddress
					ON (Customer.CustomerID=CustomerAddress.CustomerID)
						JOIN Address
					ON (CustomerAddress.AddressID=Address.AddressID)
				WHERE CompanyName='Modular Cycle Systems'
			3)
			*El número de clientes en cada una de las ciudades [ciudad, clientes] (Ordenado de menor a mayor por número de cliente) 
				SELECT City,COUNT(Customer.CustomerID) AS Clientes
				FROM Customer JOIN CustomerAddress 
					ON Customer.CustomerID = CustomerAddress.CustomerID
						JOIN Address 
					ON CustomerAddress.AddressID = Address.AddressID
				GROUP BY Address.City
			
			*Los clientes con más de dos direcciones registradas.[id, compañía, número direcciones] (Ordenados de mayor a menor por número de direcciones)
				SELECT Customer.CustomerID,Customer.CompanyName,COUNT(CustomerAddress.AddressID) AS CantDirecciones
				FROM Customer JOIN CustomerAddress 
					ON Customer.CustomerID = CustomerAddress.CustomerID
						JOIN Address 
					ON CustomerAddress.AddressID = Address.AddressID
				GROUP BY CustomerAddress.CustomerID
		        HAVING COUNT(CustomerAddress.AddressID)>=2
                ORDER BY COUNT(CustomerAddress.AddressID) ASC
			
			*Los clientes ubicados en más de una ciudad[id, compañía, tipo de dirección, ciudad] (Ordenados alfabéticamente por compañía)
				SELECT Customer.CustomerID,Customer.CompanyName,CustomerAddress.AddressType,Address.City
				FROM Customer JOIN CustomerAddress 
					ON Customer.CustomerID = CustomerAddress.CustomerID
						JOIN Address 
					ON CustomerAddress.AddressID = Address.AddressID
				GROUP BY CustomerAddress.CustomerID
		        HAVING COUNT(Address.City)>=2
                ORDER BY Customer.CompanyName ASC
			
			*Los clientes que no han modificado su dirección de cobro.[Identificación y ciudad, ordenado por ciudad]
				SELECT Customer.CustomerID,Address.City
				FROM Customer JOIN CustomerAddress 
					ON Customer.CustomerID = CustomerAddress.CustomerID
						JOIN Address 
					ON CustomerAddress.AddressID = Address.AddressID
                WHERE Address.AddressLine1!=Address.AddressLine2 AND Address.AddressLine2='NULL'
                ORDER BY Address.City 
			
			*Los clientes que han recibido descuentos de más del 10% de sus compras. [compañía, ventas y descuentos,ordenado por descuentos]
				SELECT c.CompanyName, SUM(a.Commnt) AS'Ventas', SUM(b.UnitPriceDiscount) AS 'Descuento'
				FROM SalesOrderHeader a, SalesOrderDetail b, Customer c
				WHERE c.CustomerID=a.CustomerID AND a.SalesOrderID=b.SalesOrderID AND b.UnitPriceDiscount > 0.1
				GROUP BY c.CompanyName

		
		4) Propongan la mejor consulta para el ciclo. Diséñenla e implémentenla.
				
CICLO DOS:
		A)Astah
			Atributos innecesarios:
				
				Customer:
					-Customer.MiddleName
					-Customer.Title
					-Customer.Suffix
					Es informacion de una persona que es necesaria conocer para poder llegar a un reporte mas limpio
				
				Address:
					- AddressLine1
						Ya que es necesario conocer cual es la direccion de envio
					- City
						Es necesario conocer la cidudad a donde se va a realizar el envio debido a las diferentes restricciones que se puedan tener en cada ciudad

				SalesOrderHeader:
					-CreditCardApprovalCode
						Se necesita tener siempre si la tarjeta fue aceptada
					-PurchaseOrderNumber
						Es necesario que siempre exista el orden de compra
				
				ProductCategory:
					-No se hizo ningun cambio
					
		B)Astah
		C)
			2)
			3)
			*Total de ventas por cliente:
				SELECT Customer.CustomerID, Customer.CompanyName, SUM(SalesOrderHeader.SubTotal) AS 'Total Ventas'
				FROM SalesOrderHeader, Customer
				WHERE SalesOrderHeader.CustomerID = Customer.CustomerID
				GROUP BY Customer.CompanyName ASC
				
			*Total de ventas por categoría:
				SELECT ProductCategory.Name, SUM(OrderQty) AS 'Total Unidades', COUNT(Commnt) AS 'Cantidad Ventas'
				FROM SalesOrderHeader, SalesOrderDetail,Product,ProductCategory
				WHERE    .ProductCategoryID = ProductCategory.ProductCategoryID AND Product.ProductID = SalesOrderDetail.ProductID AND SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID
				GROUP BY ProductCategory.Name
				
			*El producto más vendido a cada uno de los clientes:
				SELECT Customer.customerID, Customer.CompanyName, Product.Name, SUM(SalesOrderDetail.OrderQty) AS 'Ventas'
				FROM Customer JOIN SalesOrderHeader
					ON (Customer.CustomerID = SalesOrderHeader.CustomerID)
							  JOIN SalesOrderDetail
					ON (SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID)
							  JOIN Product
					ON (SalesOrderDetail.ProductID = Product.ProductID)
				GROUP BY Customer.CustomerID
				ORDER BY SUM(SalesOrderDetail.OrderQty) DESC
				
			*Los productos que más han cambiado su precio de venta unitario.
				SELECT p.ProductID, p.Name
				FROM SalesOrderDetail b, Product p
				WHERE (SELECT COUNT(*) 
					   FROM SalesOrderDetail c
					   WHERE b.ProductID = p.ProductID AND b.SalesOrderDetailID<> 
							 c.SalesOrderDetailID AND b.UnitPrice-c.UnitPrice > 0)
			4)
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
